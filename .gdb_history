print fn
print fds
s
s
print pid
s
print processes[pid].ppid
print processes[pid]
s
n
print processes[pid]
s
print pid
s
print processes[pid]
print processes
s
s
src-prof
asm-prof
si
src-prof
s
exit
b sys_waitpid
continue
asm-prof
si
src-prof
s
n
s
si
asm-prof
si
s
si
src-prof
s
print currentProcess
print proccesses
print processes
s
b scheduler
c
print processes
c
print processes
c
print processes
s
print processes
c
s
print processes
print currentPid
print currentProcess
s
continue
s
print currentProcess
print processes
c
print processes
print currentProcess
s
s
print processes[currentProcess].tickCount
s
print processes[currentProcess].tickCount
c
print processes[currentProcess].tickCount
s
print processes[currentProcess].tickCount
s
print processes[currentProcess].tickCount
print processes
exit
b producer
continue
b scheduler
c
print processes
c
print processes
c
print processes
c
print processes
c
print processes
c
print processes
s
break consumer
print processes
s
asm-prof
si
src-prof
s
print c
si
asm-prof
si
src-prof
s
print pid
s
print fd
s
print idx
print pipes
print pipes[0]
print *pipes[0]
si
s
s
print c
s
s
print pipes[idx]
print *pipes[idx]
s
n
s
print c
s
print *c
s
asm-prof
si
src-prof
s
s
print processes
s
s
print processes
s
asm-prof
si
src-prof
s
print processes
s
si
s
si
asm-prof
si
src-prof
s
continue
s
print processes
s
asm-prof
s
src-prof
s
print processes
s
si
s
print processes
s
s
print processes
s
continue
s
print currentProcess
s
s
s
print processes
s
print processes
c
s
print currentProcess
print processes
n
s
asm-prof
si
src-prof
s
si
s
print pid
s
print fd
s
print *pipes[idx]
s
print c
print *pipes[idx]
s
print *pipes[idx]
s
print *pipes[idx]
s
print c
s
print *c
s
print c
exit
continue
b scheduler
c
print processes
exit
b exitProcess
continue
s
s
s
print processes[2]
print *blockedQueue
print *processes[2].blockedQueue
print *((*processes[2].blockedQueue).head)
s
print curren
print current
print *current
s
print current->pid
s
print processes
s
s
print currentProcess
exit
b sys_killProcess
continue
asm-prof
si
src-prof
s
print pid
continue
asm-prof
print rdi
c
c
c
b kill
continue
src-prof
print cmdtokens[1]
s
n
exit
